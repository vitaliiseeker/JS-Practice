{"mappings":"AAAA,MAAMA,EAAW,CAAC,CAChBC,GAAI,OACJC,IAAK,GACJ,CACDD,GAAI,OACJC,IAAK,GACJ,CACDD,GAAI,OACJC,IAAK,GACJ,CACDD,GAAI,OACJC,IAAK,GACJ,CACDD,GAAI,OACJC,IAAK,GACJ,CACDD,GAAI,OACJC,IAAK,IACJ,CACDD,GAAI,OACJC,IAAK,IAGP,IAAqBC,EAsErBC,QAAQC,IAAIL,GACZI,QAAQC,MAvEaF,EAuEGH,GA1ChBM,SAAQ,SAAUC,EAAKC,EAAMC,GACjCL,QAAQC,IAAIG,GACZJ,QAAQC,IAAIF,EAAMK,GAAMN,KAExBC,EAAMK,GAAMN,KAAOC,EAAMO,OAAOD,EAAKE,MAAMH,EAAO,GAC/CI,QAAO,CAACC,EAAQC,EAAKC,EAAMC,KACtBF,EAAIb,KAAOM,EAAIN,KACjBG,QAAQC,IAAIQ,GACZT,QAAQC,IAAIS,EAAIZ,KAChBE,QAAQC,IAAIF,EAAMK,GAAMN,KAExBC,EAAMK,GAAMN,KAAOY,EAAIZ,IACvBE,QAAQC,IAAIF,EAAMK,GAAMN,KAGxBC,EAAMO,OAAOK,EAAOP,EAAO,EAAG,IAIzBK,IACNV,EAAMK,GAAMN,K,IAkBZC","sources":["src/js/09_02_sort_products.js"],"sourcesContent":["const products = [{\n  id: 'sku1',\n  qty: 1,\n}, {\n  id: 'sku2',\n  qty: 2,\n}, {\n  id: 'sku3',\n  qty: 3,\n}, {\n  id: 'sku1',\n  qty: 6,\n}, {\n  id: 'sku1',\n  qty: 8,\n}, {\n  id: 'sku2',\n  qty: 19,\n}, {\n  id: 'sku4',\n  qty: 1,\n}]\n\nfunction association(array) {\n\n  // for (let i = 0; i < arr.length - 1; i += 1) {\n  //   for (let j = i + 1; j < arr.length - 1; j += 1) {\n  //     if (arr[i].id === arr[j].id) {\n  //       arr[i].qty += arr[j].qty;\n  //       arr.splice(j, 1);\n  //       j -= 1;\n  //     }\n  //   }\n  // }\n\n  // const a1 = [...products];\n  // const a2 = [...products];\n\n  // console.log(a1);\n  // console.log(a1.splice(2, 0));\n  // console.log(a1);\n\n  // console.log(a1);\n  // console.log(a2);\n  // const a22 = a2.splice(-1, 0);\n  // console.log(a2);\n  // console.log(a22);\n\n  // console.log(a22);\n  // console.log(a22[0].id);\n  // console.log(a22[0].qty);\n\n  array.forEach(function (el1, idx1, arr1) {\n    console.log(idx1);\n    console.log(array[idx1].qty);\n\n    array[idx1].qty += array.splice(arr1.slice(idx1 + 1)\n      .reduce((accQty, el2, idx2, arr2) => {\n        if (el2.id === el1.id) {\n          console.log(accQty);\n          console.log(el2.qty);\n          console.log(array[idx1].qty);\n          // console.log(ael2[idx2].qty);\n          array[idx1].qty += el2.qty;\n          console.log(array[idx1].qty);\n\n          // console.log(array);\n          array.splice(idx2 - idx1 + 1, 1);\n          // console.log(array);\n\n        }\n        return accQty;\n      }, array[idx1].qty));\n\n    // .arr1.slice(idx1 + 1).findIndex((el3) =>\n    //   el3.id === el1.id) === -1 ? 0 : 1)[0]?.qty || 0;\n    // array[idx1].qty += array.splice(arr1.slice(idx1 + 1).findIndex((el2) =>\n    //   el2.id === el1.id) + 1, arr1.slice(idx1 + 1).findIndex((el3) =>\n    //     el3.id === el1.id) === -1 ? 0 : 1)[0]?.qty || 0;\n\n  });\n\n  // for (let i = arr.length - 1; i > 0; i -= 1) {\n  //   for (let j = i - 1; j >= 0; j -= 1) {\n  //     if (arr[j].id === arr[i].id) {\n  //       arr[j].qty += arr[i].qty;\n  //       arr.pop();\n  //     }\n  //   }\n  // }\n  return array;\n}\n\nconsole.log(products);\nconsole.log(association(products));\n\n//Потрібно перебрати масив і якщо він має об'єкти в яких дублюються айді то квонтіті цих елементів потрібно сплюсувати а той обє'кт який співпав видалити з масиву.\n//(Потрібно мутувати даний масив, створювати новий не потрібно)\n\n// const products = [{\n//   id: 'sku1',\n//   qty: 15,\n// }, {\n//   id: 'sku2',\n//   qty: 21,\n// }, {\n//   id: 'sku3',\n//   qty: 3,\n// }, {\n//   id: 'sku4',\n//   qty: 1,\n// }]\n\n"],"names":["$25555337754b83eb$var$products","id","qty","array","console","log","forEach","el1","idx1","arr1","splice","slice","reduce","accQty","el2","idx2","arr2"],"version":3,"file":"09_02_sort_products.eacefe9b.js.map"}